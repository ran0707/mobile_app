Got it! Let's modify your `WeatherCard` widget to show only the temperature with an image initially, and display all the data when the card is clicked.

### Updated WeatherCard Widget

Here's how you can update your `WeatherCard` widget:

```dart
import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

class WeatherCard extends StatefulWidget {
  const WeatherCard({super.key});

  @override
  State<WeatherCard> createState() => _WeatherCardState();
}

class _WeatherCardState extends State<WeatherCard> {
  String _weatherDescription = '';
  double _temperatureCelsius = 0.0;
  double _rain = 0.0;
  double _windSpeed = 0.0;
  double _soilTemperature = 0.0;
  double _soilMoisture = 0.0;
  bool _isDay = false;
  double _sunshineDuration = 0.0;
  bool _isLoading = true;
  bool _isExpanded = false;

  @override
  void initState() {
    super.initState();
    _fetchWeather();
  }

  Future<void> _fetchWeather() async {
    final url = 'http://10.0.2.2:3000/api/weather';
    try {
      final response = await http.get(Uri.parse(url));
      if (response.statusCode == 200) {
        final data = jsonDecode(response.body);
        setState(() {
          _temperatureCelsius = data['temperature2m'];
          _rain = data['rain'];
          _windSpeed = data['windSpeed80m'];
          _soilTemperature = data['soilTemperature0cm'];
          _soilMoisture = data['soilMoisture0To1cm'];
          _isDay = data['isDay'];
          _sunshineDuration = data['sunshineDuration'];
          _weatherDescription =
              "Temperature: ${_temperatureCelsius.toStringAsFixed(1)}°C\n"
              "Rain: ${_rain.toStringAsFixed(1)} mm\n"
              "Wind Speed: ${_windSpeed.toStringAsFixed(1)} m/s\n"
              "Soil Temperature: ${_soilTemperature.toStringAsFixed(1)}°C\n"
              "Soil Moisture: ${_soilMoisture.toStringAsFixed(1)}%\n"
              "Is Day: ${_isDay ? 'Yes' : 'No'}\n"
              "Sunshine Duration: ${_sunshineDuration.toStringAsFixed(1)} minutes";
          _isLoading = false;
        });
      } else {
        setState(() {
          _weatherDescription = 'Failed to load weather';
          _isLoading = false;
        });
      }
    } catch (e) {
      setState(() {
        _weatherDescription = 'Failed to load weather';
        _isLoading = false;
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return GestureDetector(
      onTap: () {
        setState(() {
          _isExpanded = !_isExpanded;
        });
      },
      child: Container(
        padding: const EdgeInsets.all(10.0),
        width: double.infinity,
        child: Card(
          shape: StadiumBorder(
            side: BorderSide(
              color: Colors.blueAccent,
              width: 1.0,
            ),
          ),
          color: Color(0xffcaf0f8),
          child: Padding(
            padding: const EdgeInsets.all(20.0),
            child: _isLoading
                ? const CircularProgressIndicator()
                : Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Row(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        children: [
                          Text(
                            "${_temperatureCelsius.toStringAsFixed(1)}°C",
                            style: const TextStyle(fontSize: 24.0),
                          ),
                          Image.asset(
                            _isDay
                                ? 'assets/sunny.png'
                                : 'assets/night.png', // Add your images in the assets folder
                            width: 50,
                            height: 50,
                          ),
                        ],
                      ),
                      if (_isExpanded)
                        Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            SizedBox(height: 10),
                            Text(
                              _weatherDescription,
                              style: const TextStyle(fontSize: 16.0),
                            ),
                          ],
                        ),
                    ],
                  ),
          ),
        ),
      ),
    );
  }
}
```

### Adding the Images

Make sure you have the appropriate images (`sunny.png` and `night.png`) in your `assets` folder. Update your `pubspec.yaml` file to include the assets:

```yaml
flutter:
  assets:
    - assets/sunny.png
    - assets/night.png
```

### Main Application

Ensure your `WeatherCard` is correctly integrated into your main screen:

```dart
import 'package:flutter/material.dart';
import 'weather_card.dart'; // Ensure this path is correct

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Weather App',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: Scaffold(
        appBar: AppBar(
          title: Text('Weather App'),
        ),
        body: Center(
          child: WeatherCard(),
        ),
      ),
    );
  }
}
```

### Running Your Flutter App

Ensure your backend server is running and then run your Flutter app using:

```sh
flutter run
```

This setup will initially display only the temperature and an image indicating day or night. When the `WeatherCard` is clicked, it will expand to show all the weather details.